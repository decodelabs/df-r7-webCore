@mixin generateGrid($columns:$grid-columns, $gutter:$grid-gutter, $prefix:$grid-column-prefix) {
    %#{$prefix} {
        float: left;
        padding: pxToRem($gutter*$grid-padding-ratio) pxToRem($gutter);
        box-sizing: border-box;
        min-height: 1px;
    }

    [class^="#{$prefix}"] {
        @extend %#{$prefix};
    }

    $total: $columns;

    @if length($columns) > 1 {
        $total: length($columns);
    }
        
    @for $i from 1 through $total {
        %#{$prefix + $i}-width {
            @if length($columns) > 1 {
                width: percentage(nth($columns, $i));
            }
            @else {
                width: percentage($i / $columns);
            }
        }

        %#{$prefix + $i} {
            @extend %#{$prefix};
            @extend %#{$prefix + $i}-width;
        }

        .#{$prefix + $i} {
            @extend %#{$prefix + $i}-width;
        }
    }

    .#{$grid-container-prefix} {
        width: $grid-container-width;
        box-sizing: border-box;
        margin: auto;
        @extend %clearfix;

        &.balanced {
            display: table;

            [class*="#{$grid-column-prefix}"] {
                float: none;
                display: table-cell;
                vertical-align: middle;
            }
        }

        &.inset {
            width: calc(#{$grid-container-width} - #{pxToRem(2 * $gutter)});

            > [class*="#{$prefix}"] {
                padding: pxToRem($gutter*$grid-padding-ratio) 0;
            }
        }
    }
}

@if $grid == true {
    @include generateGrid();
}